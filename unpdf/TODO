InStream::open(bool raw)  =>  InStream::open(ReadMode mode)    enum ReadMode { UNCOMPRESSED, COMPRESSED(RAW), ENCRYPTED };
remove InStream::write ?!  -> generic debug_write()?
pdfget/imgout.{cpp,h}
--
prettify output of <<>> etc
OutPDF shall not take (FILEOutput &fo), but s.th. like SummingOutput(...) 
don't use  too much bool default parameters, but special enums

getTake -> _move_from ????

ColorSpace  ,  Image  Image::fromPNG ::from...

generate_id
Ref StandardSecurityHandler::print(OutPDF &outpdf) for /Encrypt

errata:--- crypt: do not apply 3.1 (key-generation from object key), when in /Crypt -Filter -- and these shall be "first"

OutPDF::copy_from(...) ... "remap" InStream to OutStream

Encrypt ... OutPDF (add StandardSecurityHandler)

// TODO: we probably need makeOutputFrom(/Filter,/DecodeParams);
// and/or   InStream::decode_up_to

OutPDF::replace_obj(const Ref &ref,const Object *obj)
---
pdfbase
pdffilter : // later: png(decode: impl predictors, encode with libpng(?)) jpeg(libjpeg)

- simple tool to extract the image on a certain page
- another lib, that scales(!) a pbm (from g4coder) to a pgm suitable for libpng. (different resolutions, fast [later: + high quality])

/* - one lib that makes cgi-programming simple? [Think about >state, >templates, combinability with php] */
do: simple commandline tool; passthru() in php;
